// <auto-generated />
using System;
using ClaimsModule.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClaimsModule.Infrastructure.Migrations
{
    [DbContext(typeof(ClaimsDbContext))]
    partial class ClaimsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ClaimsModule.Domain.Entities.Claim", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("longtext");

                    b.Property<string>("DecisionId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<Guid?>("GeneratedDocumentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("PolicyId")
                        .HasColumnType("longtext");

                    b.Property<string>("PolicyMatchResultId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DecisionId")
                        .IsUnique();

                    b.HasIndex("GeneratedDocumentId")
                        .IsUnique();

                    b.HasIndex("PolicyMatchResultId")
                        .IsUnique();

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("ClaimsModule.Domain.Entities.Decision", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DecidedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DecidedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Decision");
                });

            modelBuilder.Entity("ClaimsModule.Domain.Entities.GeneratedDocument", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileUrl")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("GeneratedDocument");
                });

            modelBuilder.Entity("ClaimsModule.Domain.Entities.Policy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("ClaimsModule.Domain.Entities.PolicyMatchResult", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<float?>("SimilarityScore")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PolicyMatchResult");
                });

            modelBuilder.Entity("ClaimsModule.Domain.Entities.Claim", b =>
                {
                    b.HasOne("ClaimsModule.Domain.Entities.Decision", "Decision")
                        .WithOne()
                        .HasForeignKey("ClaimsModule.Domain.Entities.Claim", "DecisionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClaimsModule.Domain.Entities.GeneratedDocument", "GeneratedDocument")
                        .WithOne()
                        .HasForeignKey("ClaimsModule.Domain.Entities.Claim", "GeneratedDocumentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClaimsModule.Domain.Entities.PolicyMatchResult", "PolicyMatchResult")
                        .WithOne()
                        .HasForeignKey("ClaimsModule.Domain.Entities.Claim", "PolicyMatchResultId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Decision");

                    b.Navigation("GeneratedDocument");

                    b.Navigation("PolicyMatchResult");
                });
#pragma warning restore 612, 618
        }
    }
}
